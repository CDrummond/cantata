set( CANTATA_MOUNTER_SRCS main.cpp mounter.cpp )
set( CANTATA_MOUNTER_MOC_HDRS mounter.h )
if (ENABLE_QT5)
    qt5_wrap_cpp( CANTATA_MOUNTER_MOC_SRCS ${CANTATA_MOUNTER_MOC_HDRS} )
    qt5_add_dbus_adaptor(CANTATA_MOUNTER_SRCS com.googlecode.cantata.mounter.xml mounter.h Mounter )
else (ENABLE_QT5)
    qt4_wrap_cpp( CANTATA_MOUNTER_MOC_SRCS ${CANTATA_MOUNTER_MOC_HDRS} )
    qt4_add_dbus_adaptor(CANTATA_MOUNTER_SRCS com.googlecode.cantata.mounter.xml mounter.h Mounter )
    add_definitions( -DQT_NO_STL -DQT_NO_CAST_TO_ASCII -Wall -Wextra )
endif (ENABLE_QT5)

add_executable( cantata-mounter ${CANTATA_MOUNTER_SRCS} ${CANTATA_MOUNTER_MOC_SRCS} )
install( TARGETS cantata-mounter RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib )
configure_file(com.googlecode.cantata.mounter.service.cmake ${CMAKE_CURRENT_BINARY_DIR}/com.googlecode.cantata.mounter.service)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/com.googlecode.cantata.mounter.service DESTINATION ${CMAKE_INSTALL_PREFIX}/share/dbus-1/system-services/ )
install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/com.googlecode.cantata.mounter.conf DESTINATION /etc/dbus-1/system.d/ )

if (ENABLE_QT5)
    target_link_libraries(cantata-mounter ${Qt5Core_LIBRARIES} ${Qt5DBus_LIBRARIES})
else (ENABLE_QT5)
    target_link_libraries(cantata-mounter ${QT_QTCORE_LIBRARY} ${QT_QTDBUS_LIBRARY})
endif (ENABLE_QT5)
include_directories( ${QTINCLUDES} ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_BINARY_DIR})

install(FILES ${_qmFile} DESTINATION ${CMAKE_INSTALL_PREFIX}/share/cantata/)

install(PROGRAMS mount.cifs.wrapper DESTINATION ${CMAKE_INSTALL_PREFIX}/share/cantata/scripts/ )
